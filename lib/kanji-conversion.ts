// 新字体と旧字体の対応表
export const newToOldKanji: Record<string, string> = {
  // 常用漢字の新��体→旧字体変換（一部）
  国: "國",
  広: "廣",
  斉: "齊",
  浜: "濱",
  徳: "德",
  芸: "藝",
  関: "關",
  栄: "榮",
  沢: "澤",
  斎: "齋",
  桜: "櫻",
  竜: "龍",
  寿: "壽",
  曽: "曾",
  万: "萬",
  黒: "黑",
  宝: "寶",
  旧: "舊",
  真: "眞",
  縁: "緣",
  蛍: "螢",
  薬: "藥",
  読: "讀",
  帰: "歸",
  絵: "繪",
  緒: "緖",
  総: "總",
  聴: "聽",
  処: "處",
  歩: "步",
  証: "證",
  昼: "晝",
  畳: "疊",
  円: "圓",
  浄: "淨",
  営: "營",
  争: "爭",
  為: "爲",
  犠: "犧",
  獣: "獸",
  産: "產",
  画: "畫",
  当: "當",
  発: "發",
  衆: "眾",
  県: "縣",
  与: "與",
  舎: "舍",
  蔵: "藏",
  虫: "蟲",
  売: "賣",
  転: "轉",
  辞: "辭",
  逓: "遞",
  医: "醫",
  釈: "釋",
  鉄: "鐵",
  鋳: "鑄",
  閲: "閱",
  静: "靜",
  顕: "顯",
  駅: "驛",
  験: "驗",
  髪: "髮",
  鶏: "鷄",
  弁: "辨",
  辺: "邊",
  学: "學",
  体: "體",
  点: "點",
  変: "變",
  観: "觀",
  歯: "齒",
  児: "兒",
  戸: "戶",
  抜: "拔",
  挿: "插",
  晩: "晚",
  条: "條",
  桟: "棧",
  残: "殘",
  涙: "淚",
  状: "狀",
  鉱: "礦",
  秘: "祕",
  礼: "禮",
  稲: "稻",
  穂: "穗",
  粋: "粹",
  糸: "絲",
  緑: "綠",
  台: "臺",
  荘: "莊",
  蒋: "蔣",
  芦: "蘆",
  蝋: "蠟",
  装: "裝",
  覧: "覽",
  譲: "讓",
  頼: "賴",
  賛: "贊",
  践: "踐",
  軽: "輕",
  遥: "遙",
  郷: "鄕",
  録: "錄",
  錬: "鍊",
  陥: "陷",
  随: "隨",
  霊: "靈",
  頬: "頰",
  顔: "顏",
  翻: "飜",
  余: "餘",
  麦: "麥",
  黄: "黃",
  黙: "默",
}

// 旧字体と新字体の対応表（逆引き）
export const oldToNewKanji: Record<string, string> = Object.entries(newToOldKanji).reduce(
  (acc, [newKanji, oldKanji]) => {
    acc[oldKanji] = newKanji
    return acc
  },
  {} as Record<string, string>,
)

// 旧字体の画数データ
export const oldKanjiStrokeData: Record<string, number> = {
  國: 11,
  廣: 15,
  齊: 16,
  濱: 17,
  德: 15,
  藝: 19,
  關: 19,
  榮: 14,
  澤: 16,
  齋: 17,
  櫻: 19,
  龍: 16,
  壽: 14,
  曾: 11,
  萬: 12,
  黑: 14,
  寶: 20,
  舊: 18,
  眞: 10,
  緣: 14,
  螢: 16,
  藥: 19,
  讀: 19,
  歸: 14,
  繪: 19,
  緖: 15,
  總: 14,
  聽: 17,
  處: 11,
  步: 8,
  證: 23,
  晝: 11,
  疊: 22,
  圓: 13,
  淨: 11,
  營: 17,
  爭: 8,
  爲: 12,
  犧: 17,
  獸: 19,
  產: 14,
  畫: 12,
  當: 13,
  發: 12,
  眾: 11,
  縣: 16,
  與: 14,
  舍: 8,
  藏: 18,
  蟲: 19,
  賣: 14,
  轉: 17,
  辭: 16,
  遞: 14,
  醫: 18,
  釋: 16,
  鐵: 20,
  鑄: 22,
  閱: 15,
  靜: 16,
  顯: 18,
  驛: 23,
  驗: 23,
  髮: 16,
  鷄: 19,
  辨: 16,
  邊: 17,
  學: 16,
  體: 23,
  點: 17,
  變: 23,
  觀: 23,
  齒: 15,
  兒: 8,
  强: 11,
  戶: 4,
  拔: 8,
  插: 12,
  晚: 11,
  條: 11,
  棧: 12,
  殘: 10,
  淚: 11,
  溫: 12,
  狀: 8,
  礦: 17,
  祕: 10,
  禮: 18,
  稻: 15,
  穗: 14,
  粹: 14,
  絲: 13,
  綠: 14,
  臺: 14,
  莊: 11,
  蔣: 14,
  蘆: 19,
  蠟: 21,
  裝: 14,
  覽: 20,
  讓: 20,
  賴: 15,
  贊: 17,
  踐: 15,
  輕: 15,
  辯: 20,
  遙: 14,
  鄉: 13,
  鍊: 17,
  陷: 11,
  隨: 16,
  靈: 17,
  頰: 17,
  顏: 18,
  飜: 18,
  餘: 16,
  麥: 11,
  黃: 12,
  黑: 14,
  默: 16,
  齊: 16,
  齋: 17,
  齒: 15,
  隆: 17, // 「隆」を17画として追加
}

// 新字体から旧字体に変換する関数
export function convertToOldKanji(text: string): string {
  let result = ""
  for (let i = 0; i < text.length; i++) {
    const char = text[i]
    result += newToOldKanji[char] || char
  }
  return result
}

// 旧字体から新字体に変換する関数
export function convertToNewKanji(text: string): string {
  let result = ""
  for (let i = 0; i < text.length; i++) {
    const char = text[i]
    result += oldToNewKanji[char] || char
  }
  return result
}

// 文字が旧字体かどうかを判定する関数
export function isOldKanji(char: string): boolean {
  return Object.values(newToOldKanji).includes(char)
}

// 文字が新字体かどうかを判定する関数
export function isNewKanji(char: string): boolean {
  return Object.keys(newToOldKanji).includes(char)
}

// 旧字体の画数を取得する関数
export function getOldKanjiStroke(char: string): number {
  return oldKanjiStrokeData[char] || 0
}
